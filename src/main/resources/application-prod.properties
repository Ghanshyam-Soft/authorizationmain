server.port=8901

spring.datasource.url=jdbc:postgresql://pay09-payments-db-dbp-pgsql-pe-01.postgres.database.azure.com:5432/naddb_prd
spring.jpa.properties.hibernate.default_schema=naddb_own
spring.datasource.username=naddb_prd_rw@pay09-payments-db-dbp-pgsql-pe-01
spring.datasource.password=${postgresql-user-prod-secret}

spring.datasource.hikari.maximumPoolSize=66
 
#Logging Configuration
logging.config=classpath:log4j2-prod.xml

#If swagger.enable is false, swaggerAuth.enable should be false
swagger.enable=false
swaggerAuth.enable=false

stpay.authKey=${stpay-service-auth-key}
stpay.authSecret=${stpay-service-auth-secret}
stpay.authTokenUrl=https://api.staplespay.com/STPayServiceAPI/api/authToken
stpay.threeDSUrl=https://api.staplespay.com/STPayServiceAPI/api/cards/threeDSResp
stpay.merchantId=GPASPRD01
#TODO: Find real value
stpay.timeout=50s
#Spay auth token expring time buffer
stpay.expireIn=3000000
##50 mins buffer may not be needed for production in case Spay validity for Auth token is already having some buffer in prod
##which is not the case on QA, there validity time is returning as current system time.

request.logging.enable=false

aci.service.baseUrl=https://nadauth-aci-pe.az.staples.com
aci.service.username=${aci-bankservice-service-username}
aci.service.password=${aci-bankservice-service-password}

braintree.service.baseUrl=https://nadauth-braintree-pe.az.staples.com
braintree.service.username=${braintree-bankservice-service-username}
braintree.service.password=${braintree-bankservice-service-password}

bambora.service.baseUrl=https://nadauth-bambora-pe.az.staples.com
bambora.service.username=${bambora-bankservice-service-username}
bambora.service.password=${bambora-bankservice-service-password}

amexpwp.service.baseUrl=https://nadauth-pwp-pe.az.staples.com
amexpwp.service.username=${amexpwp-bankservice-service-username}
amexpwp.service.password=${amexpwp-bankservice-service-password}

cyb.service.baseUrl=https://nadauth-cyb-pe.az.staples.com
cyb.service.username=${cybersource-bankservice-service-username}
cyb.service.password=${cybersource-bankservice-service-password}

#TODO: Add production values:
cardconsent.service.baseUrl=TBD
cardconsent.service.username=TBD
cardconsent.service.password=TBD

spring.cloud.azure.active-directory.enabled=true
spring.cloud.azure.active-directory.app-id-uri=api://4cb504c7-fdd9-4a83-9e49-ba7f51cae0c7

spring.cloud.azure.keyvault.secret.property-source-enabled=true
spring.cloud.azure.keyvault.secret.property-sources[0].endpoint=https://pay09keyvaultpe0.vault.azure.net/
spring.cloud.azure.keyvault.secret.property-sources[0].credential.client-id=d753f67c-5e06-48bb-b6ea-bc618cf9fe97
spring.cloud.azure.keyvault.secret.property-sources[0].credential.managed-identity-enabled=true

server.ssl.enabled=true
server.ssl.key-store-type=JKS


#Whether to allow message in error responses
server.error.include-message=never

#Feature flags
feature.enable.cit=true
feature.enable.mit=false
feature.enable.threeDs=true
feature.enable.pwpBalance=true
feature.enable.pwpRedeem=true
feature.enable.prepaid=true
feature.enable.giftcard=true

#Fraud check production settings for .com
fraud.check.consumerDetails[0].division=COM
fraud.check.consumerDetails[0].businessUnit=SBD
fraud.check.consumerDetails[0].duration=86400s
fraud.check.consumerDetails[0].retryCount=15
